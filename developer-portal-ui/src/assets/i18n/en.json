{
  "HEADER": {
    "GETTING_STARTED": "Getting started",
    "TEST_CASES": "Test cases",
    "FAQ": "FAQs",
    "CONTACT": "Contact"
  },
  "FOOTER": {
    "GETTING_STARTED": "Getting started",
    "TEST_CASES": "Test cases",
    "FAQ": "FAQs",
    "CONTACT": "Contact"
  },
  "HOME": {
    "HEADER": {
      "TITLE_1": "Developer Portal",
      "TITLE_2": "by adorsys",
      "SUBTITLE_1": "Creating new, digital",
      "SUBTITLE_2": "services through Open",
      "SUBTITLE_3": "Banking"
    },
    "WHAT_IS": {
      "TITLE": "What is XS2ASandbox?",
      "CONTENT": {
        "XS2A": "XS2ASandbox",
        "PART_1": "is a dynamic sandbox\n  environment that fully meets the PSD2 requirements for providing APIs for\n  Third-Party Providers (TPP). Based on the Berlin Group’s NextGen PSD2\n  specification for access to accounts (XS2A),",
        "PART_2": "meets all the regulatory\n  requirements and is NISP compliant. This developer portal is created to help\n  TPP developers start working with XS2ASandbox."
      }
    },
    "HOW_TO": {
      "TITLE": "How to use XS2ASandbox",
      "STEP_1": {
        "TITLE": "Step 1",
        "CONTENT": "Read «Getting started» manual"
      },
      "STEP_2": {
        "TITLE": "Step 2",
        "CONTENT": "Download, install and run XS2ASandbox"
      },
      "STEP_3": {
        "TITLE": "Step 3",
        "CONTENT": "Read «Testing flows» and start testing!"
      }
    },
    "PSD2": {
      "TITLE": "PSD2 and Open Banking",
      "LINK": "Payment Service Directive 2 (PSD2)",
      "CONTENT": "instructs banks (Account Servicing Payment Service Providers or ASPSPs) to\n provide a fully productive Access-to-Account (XS2A) interface to Third Party\n Providers (TPPs) until September 2019. XS2A itself consists of banking\n services to initiate payments (PIS), request account data (AIS) and get the\n confirmation of the availability of funds (PIIS). In order to guarantee the\n compliance of this deadline due to adaptations and bugs, PSD2 claims the\n banks to provide a functional dynamic sandbox offering the XS2A services in\n a non-productive environment until June 2019."
    },
    "FEATURES": {
      "TITLE": "XS2ASandbox Features",
      "CONTENT": "XS2ASandbox is a dynamic sandbox environment: you can create users, payments\n    and consents, play with data for testing purposes. With dynamic sandbox TPP\n    UI you can access banking API directly, get TPP certificate and manage\n    testing accounts. The developer portal contains testing instructions and all\n    needed test-cases. All XS2ASandbox services can be installed and run in one\n    simple command. Two main SCA approaches are supported: REDIRECT and\n    EMBEDDED. For redirect approach online banking demo UI was created.",
      "SLIDES": {
        "SLIDE_1": {
          "TITLE": "Plug and Play",
          "CONTENT": "Ready to use solution, which can be easily installed"
        },
        "SLIDE_2": {
          "TITLE": "Detailed Documentation",
          "CONTENT": "Well described documentation on a developer portal"
        },
        "SLIDE_3": {
          "TITLE": "Reliable test options",
          "CONTENT": "TPP-Test certificate generation tool and NISP Tests"
        },
        "SLIDE_4": {
          "TITLE": "Customizable User Interface",
          "CONTENT": "TPP-UI for users and account management on the bank side"
        },
        "SLIDE_5": {
          "TITLE": "Customer focused",
          "CONTENT": "Client-oriented approach, flexible solution for customer needs and customer support"
        },
        "SLIDE_6": {
          "TITLE": "Realistic Simulation",
          "CONTENT": "Real bank system emulations with embedded XS2A API"
        },
        "SLIDE_7": {
          "TITLE": "Wide range of services",
          "CONTENT": "Accounting Service, Security Service and Payment Service"
        },
        "SLIDE_8": {
          "TITLE": "Open source",
          "CONTENT": "Open source project, available on GitHub and constantly updated"
        }
      }
    },
    "HISTORY": {
      "TITLE": "Product History",
      "PRODUCT": {
        "POINT_1": {
          "TITLE": "Project Kick-Off with two Team Members",
          "CONTENT": ""
        },
        "POINT_2": {
          "TITLE": "PreDemo of MVP 1.0",
          "CONTENT": "Embedded approach: PIS, AIS, PIIS"
        },
        "POINT_3": {
          "TITLE": "DEMO of MVP 1.0",
          "CONTENT": "Embedded and redirected approaches"
        },
        "POINT_4": {
          "TITLE": "Release of XS2ASandbox ver 1.0",
          "CONTENT": "Support of Redirect and Embedded approach: TPP-UI, Online Banking"
        },
        "POINT_5": {
          "TITLE": "Release ver 1.1",
          "CONTENT": "Multilevel SCA, Multicurrency accounts"
        }
      }
    },
    "QUESTIONS": {
      "TITLE": "Any Questions?",
      "ASK": "Ask this person."
    }
  },
  "GETTING_STARTED": {
    "INTRODUCTION": {
      "TITLE": "Introduction",
      "CONTENT": {
        "LINK": "Payment Service Directive 2 (PSD2)",
        "PART_1": "instructs banks (Account Servicing Payment Service Providers or ASPSPs) to\n provide a fully productive Access-to-Account (XS2A) interface to Third\n Party Providers (TPPs) until September 2019. XS2A itself consists of\n banking services to initiate payments (PIS), request account data (AIS)\n and get the confirmation of the availability of funds (PIIS). In order to\n guarantee the compliance of this deadline due to adaptions and bugs, PSD2\n claims the banks to provide a functional dynamic sandbox offering the XS2A\n services in a non-productive environment until June 2019.",
        "XS2A": "XS2ASandbox",
        "PART_2": "is a dynamic sandbox environment\n that fully meets the PSD2 requirements for providing APIs for Third-Party\n Providers (TPP). Based on the Berlin Group’s NextGen PSD2 specification\n for access to accounts (XS2A),",
        "PART_3": "This developer portal is created to help TPP developers start working with\n XS2ASandbox."
      }
    },
    "ARCHITECTURE": {
      "TITLE": "XS2ASandbox architecture and modules",
      "CONTENT": "Components of XS2ASandbox with their connections to each other are shown\n in Figure 1.1.",
      "CAPTION": "Figure 1.1: Components of the XS2ASandbox"
    },
    "INTERFACE": {
      "TITLE": "XS2A Interface",
      "CONTENT": {
        "PART_1": "Central component of the",
        "XS2A": "XS2ASandbox",
        "PART_2": "is the XS2A\n interface which meets the requirements of the Berlin Group's specification",
        "PART_3": "(Version 1.3) and is based on test data. You can visit our",
        "PART_4": "or find full",
        "LINK": "OpenSource XS2A Interface on Github."
      }
    },
    "PROFILE": {
      "TITLE": "ASPSP-Profile",
      "CONTENT": {
        "PART_1": "Besides the actual interface, PSD2 instructs ASPSPs to offer a technical\n documentation free of charge containing amongst others, information about\n supported payment products and payment services. This information is\n stored in ",
        "ASPSP": "ASPSP-profile",
        "PART_2": "(bank profile), a\n service based on yaml file where a bank can provide available payment\n products, payment services, supported SCA approaches and other\n bank-specific settings."
      },
      "SUBTITLE_1": "Active XS2A Configuration (Bank Profile)",
      "LIST": {
        "LI_1": "Supported SCA-Approach: Redirect, Embedded",
        "LI_2": "Available payment types and payment products for each type:",
        "UL_1": {
          "LI_1": "Single (sepa-credit-transfers)",
          "LI_2": "Future-Dated (sepa-credit-transfers)",
          "LI_3": "Bulk (sepa-credit-transfers)",
          "LI_4": "Periodic (sepa-credit-transfers)"
        },
        "LI_3": "Confirmation of Funds: supported",
        "LI_4": "Redirect URLs to Online Banking:",
        "UL_2": {
          "LI_1": "Redirect URL for Payment confirmation: **\n http://localhost:4400/payment-initiation/login?paymentId=encrypted-payment-id&redirectId=redirect-id\n **",
          "LI_2": "Redirect URL for Payment cancellation: **\n http://localhost:4400/payment-cancellation/login?paymentId=encrypted-payment-id&redirectId=redirect-id\n **",
          "LI_3": "Redirect URL for Account Consent confirmation: **\n http://localhost:4400/account-information/login?encryptedConsentId=encrypted-consent-id&redirectId=redirect-id\n **"
        },
        "LI_5": "Supported types of Consents:",
        "UL_3": {
          "LI_1": "Dedicated: Yes",
          "LI_2": "Bank-Offered: Yes",
          "LI_3": "Global: Yes",
          "LI_4": "Available Accounts: Yes"
        },
        "DISABLED": "Currently disabled features:",
        "LI_6": "Signing Basket",
        "LI_7": "Delta-Reports"
      },
      "SUBTITLE_2": "Corresponding ASPSP-Profile settings in .yaml file:"
    },
    "CERTIFICATE": {
      "TITLE": "TPP Certificate Service",
      "CONTENT": {
        "PART_1": "Usually, before accessing the XS2A services a TPP would need to register\n at its National Competent Authority (NCA) and request an",
        "PART_2": "certificate at an appropriate Trust Service Provider (TSP). Issuing a real\n certificate just for testing purposes would be too much effort, which is\n why the ",
        "XS2A": "XS2ASandbox",
        "PART_3": "is additionally simulating a\n fictional TSP issuing Qualified Website Authentication Certificates\n (QWAC). A QWAC is part of eIDAS and might be better known",
        "PART_4": "certificate. For PSD2-purposes the certificate gets extended by the\n QcStatement containing appropriate values such as the role(s) of the PSP\n (see",
        "PART_5": "After embedding the QWAC in the actual XS2A request, the role and the\n signature get validated at a central reverse proxy before it gets finally\n passed to the interface where the banking logic happens."
      }
    },
    "UI": {
      "TITLE": "TPP User Interface",
      "CONTENT": "TPP developers can register themselves into the system, obtain certificate\n and download test data for their TPP application using generated\n certificate and prepared data in TPP UI."
    },
    "OBA": {
      "TITLE": "Online banking",
      "CONTENT": "In case of REDIRECT SCA approach a user wants to provide consent for using\n their account information or for payment confirmation/cancellation. Online\n banking is a user interface to provide consent to a bank. Links for a\n consent confirmation and payment confirmation or cancellation are provided\n in the response of the corresponding endpoints."
    }
  }
}
