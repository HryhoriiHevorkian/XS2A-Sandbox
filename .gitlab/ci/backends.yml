#################
# Code Analysis #
#################

CA javadoc check:
  stage: "Code Analysis"
  image: "adorsys/ci-build"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
      - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

####################
# Code Compilation #
####################

CC backends Java8:
  stage: "Code Compilation"
  extends: .build_java
  variables:
    BUILD_JAVA_VERSION: system@1.8
  artifacts:
    paths:
      - "online-banking/online-banking-app/target/online-banking-app.jar"
      - "certificate-generator/target/certificate-generator.jar"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

CC backends Java11:
  stage: "Code Compilation"
  extends: .build_java
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

################
# Unit Testing #
################

UT backends:
  stage: "Unit Testing"
  image: "adorsys/ci-build"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

##################
# Docker Testing #
##################

DT oba:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_ONLINE_BANKING}
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
  extends: .build_dockerimage

DT certgen:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_CERTIFICATE_GENERATOR}
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
  extends: .build_dockerimage

#########################
# Vulnerability Testing #
#########################

VT oba:
  stage: "Vulnerability Testing"
  image: 
    name: adorsys/ci-clair
  services:
    - name: arminc/clair-db:latest
      alias: postgres
  before_script:
    - /clair -config=/config/config.yaml -log-level=warn &
    - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/${DOCKER_IMAGE_ONLINE_BANKING}:test"
    - wait-for-clair
  script:
    - clair-scanner -c http://localhost:6060 --ip $(hostname -i) "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/${DOCKER_IMAGE_ONLINE_BANKING}:test"

#####################
# Docker Publishing #
#####################

DP oba develop:
  stage: "Docker Publishing"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: develop
  extends: .publish_dockerhub

DP oba nightly:
  stage: "Docker Publishing"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: nightly
  extends: .publish_dockerhub

DP oba master:
  stage: "Docker Publishing"
  image: "adorsys/ci-build"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: latest
  extends: .publish_dockerhub

DP certgen develop:
  stage: "Docker Publishing"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: develop
  extends: .publish_dockerhub

DP certgen nightly:
  stage: "Docker Publishing"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: nightly
  extends: .publish_dockerhub

DP certgen master:
  stage: "Docker Publishing"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: latest
  extends: .publish_dockerhub

########################
# OpenShift Deployment #
########################

OD oba develop:
  stage: "OpenShift Deployment"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: develop # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEV} # Openshift target namespace
  extends: .deploy_openshift

OD oba nightly:
  stage: "OpenShift Deployment"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: nightly # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_INTEG} # Openshift target namespace
  extends: .deploy_openshift

OD oba demo:
  stage: "OpenShift Deployment"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
    DOCKER_TAG: latest # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEMO} # Openshift target namespace
  extends: .deploy_openshift

OD certgen develop:
  stage: "OpenShift Deployment"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: develop # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEV} # Openshift target namespace
  extends: .deploy_openshift

OD certgen nightly:
  stage: "OpenShift Deployment"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: nightly # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_INTEG} # Openshift target namespace
  extends: .deploy_openshift

OD certgen demo:
  stage: "OpenShift Deployment"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
    DOCKER_TAG: latest # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEMO} # Openshift target namespace
  extends: .deploy_openshift

##############################
# Maven Release of xs2a-impl #
##############################

MR maven central:
  stage: "Maven Release"
  image: "adorsys/ci-build"
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  only:
    - tags
  script:
    - echo $SONATYPE_GPG_SECRET_KEY | base64 --decode | $SONATYPE_GPG_EXECUTABLE --import
    - echo $SONATYPE_GPG_OWNERTRUST | base64 --decode | $SONATYPE_GPG_EXECUTABLE --import-ownertrust
    - mvn --settings scripts/mvn-release-settings.xml -Prelease -DskipTests -B -U deploy