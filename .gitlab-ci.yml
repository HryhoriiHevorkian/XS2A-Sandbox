# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

image: "adorsys/ci-build:201907"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Compile"  # build jar and provide as artifact
  - "Test"     # run tests and code quality checks
  - "Package"  # dockerize jar and push to docker registry
  - "Deploy"   # push to openshift registry
  - "release"  # release

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables:

  # Online banking
  DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING: "xs2a-online-banking"
  DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR: "xs2a-certificate-generator"
  DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI: "xs2a-online-banking-ui"
  DOCKER_IMAGE_NAME_XS2A_TPP_UI: "xs2a-bank-tpp-ui"
  DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI: "xs2a-bank-devportal"
  DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS: "xs2a-postman-tests"
  DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER: "xs2a-tpp-rest-server"

  ###########################
  # Public Dockerhub Images #
  ###########################

  DOCKERHUB_REGISTRY: "docker.io"

  DOCKERHUB_NAMESPACE: "adorsys"

  ############################
  # Private Openshift Images #
  ############################

  #OPENSHIFT_NAMESPACE_DEV: "adorsys-dynamic-sandbox-dev"
  #OPENSHIFT_NAMESPACE_INTEG: "adorsys-dynamic-sandbox-integ"
  #OPENSHIFT_NAMESPACE_DEMO: "adorsys-dynamic-sandbox-demo"
  OPENSHIFT_NAMESPACE_KOA_TEST_DEPLOY_DYNAMIC_SANDBOX: "koa-test-deploy-dynamic-sandbox"
  ###########################
  # Build variables         #
  ###########################

  # Defaults for Java 8
  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  stage: "Compile"
  script:
    - jabba use $BUILD_JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipTests clean install
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
    - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository

# Build docker images and put them to DOCKER HUB repo
.build_docker_images: &build_docker_images
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}" online-banking/online-banking-app
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR}:${DOCKER_TAG}" certificate-generator
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}" oba-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}" tpp-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}" tpp-app/tpp-rest-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}" developer-portal-ui
    #- docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS}:${DOCKER_TAG}" postman-scripts

.push_dockerhub_images: &push_dockerhub_images
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}" online-banking/online-banking-app
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR}:${DOCKER_TAG}" certificate-generator
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}" oba-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}" tpp-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}" tpp-app/tpp-rest-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}" developer-portal-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS}:${DOCKER_TAG}" postman-scripts

    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}"
    - docker push  "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}"
    #- docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS}:${DOCKER_TAG}"
    - docker logout

# Copy Dockerhub images to Openshift (depending on ${DOCKER_TAG})
.deploy_openshift: &deploy_openshift
  script:
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_CERTIFICATE_GENERATOR}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:latest"
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:latest"
#    - >-
#      skopeo copy
#      --dest-creds=openshift:${OPENSHIFT_TOKEN}
#      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS}:${DOCKER_TAG}"
#      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_POSTMAN_TESTS}:latest"

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

build devportal frontend:
  stage: "Compile"
  script:
    - scripts/.update-postman-test-files.sh
    - cd developer-portal-ui
    - npm install
    - npm run build --prod
  cache:
    key: "DEVPORTAL_${CI_COMMIT_REF_SLUG}"
    paths:
      - developer-portal-ui/node_modules
  artifacts:
    paths:
      - "developer-portal-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

build oba frontend:
 stage: "Compile"
 script:
    - cd oba-ui
    - npm install
    - npm run build --prod
 cache:
    key: "OBA_UI_${CI_COMMIT_REF_SLUG}"
    paths:
     - oba-ui/node_modules
 artifacts:
    paths:
     - "oba-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

build tpp frontend:
  stage: "Compile"
  script:
    - cd tpp-ui
    - npm install
    - npm run build --prod
  cache:
    key: "TPP_UI_${CI_COMMIT_REF_SLUG}"
    paths:
      - tpp-ui/node_modules
  artifacts:
    paths:
      - "tpp-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

build_package_java11:
  <<: *build_java
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

build_package_java8:
  <<: *build_java
  variables:
    BUILD_JAVA_VERSION: system@1.8
  artifacts:
    paths:
      - "online-banking/online-banking-app/target/online-banking-app.jar"
      - "certificate-generator/target/certificate-generator.jar"
      - "tpp-app/tpp-rest-server/target/tpp-rest-server.jar"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

pmd_report:
  stage: "Compile"
  script:
    - mvn -Dmaven.test.skip=true package pmd:pmd
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

check_pmd:
  stage: "Test"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - mvn -Dmaven.test.skip=true package pmd:check

check_javadoc_java8:
  stage: "Test"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
      - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

backend_unit_tests:
  stage: "Test"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

devportal_frontend_unit_tests:
  stage: "Test"
  script:
  - cd developer-portal-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

tpp_frontend_unit_tests:
  stage: "Test"
  script:
  - cd tpp-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

oba_frontend_unit_tests:
  stage: "Test"
  script:
  - cd oba-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

test building docker images:
  stage: "Test"
  variables:
    DOCKER_TAG: test
  <<: *build_docker_images

# develop

build_dockerhub_image_develop:
  stage: "Package"
  only:
    - koa-test-deploy-dynamic-sandbox
  variables:
    DOCKER_TAG: koa-test-deploy-dynamic-sandbox
  <<: *push_dockerhub_images

deploy_openshift_develop:
  stage: "Deploy"
  only:
    - koa-test-deploy-dynamic-sandbox
  variables:
    DOCKER_TAG: koa-test-deploy-dynamic-sandbox # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_KOA_TEST_DEPLOY_DYNAMIC_SANDBOX} # Openshift target namespace
  <<: *deploy_openshift

