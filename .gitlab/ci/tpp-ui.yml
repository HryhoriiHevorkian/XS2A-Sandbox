####################
# Code Compilation #
####################

CC tpp-ui:
  stage: "Code Compilation"
  image: "adorsys/ci-build"
  script:
    - cd tpp-ui
    - npm install
    - npm run build --prod
  cache:
    key: "TPP_UI_${CI_COMMIT_REF_SLUG}"
    paths:
      - tpp-ui/node_modules
  artifacts:
    paths:
      - "tpp-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

################
# Unit Testing #
################

UT tpp-ui:
  stage: "Unit Testing"
  image: "adorsys/ci-build"
  script:
  - cd tpp-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

##################
# Docker Testing #
##################

DT tpp-ui:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_TPP_UI}
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
  extends: .build_dockerimage

#########################
# Vulnerability Testing #
#########################

VT tpp-ui:
  stage: "Vulnerability Testing"
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: test
  extends: .scan_cve

#####################
# Docker Publishing #
#####################

DP tpp-ui develop:
  stage: "Docker Publishing"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: develop
  extends: .publish_dockerhub

DP tpp-ui nightly:
  stage: "Docker Publishing"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: nightly
  extends: .publish_dockerhub

DP tpp-ui master:
  stage: "Docker Publishing"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: latest
  extends: .publish_dockerhub

########################
# OpenShift Deployment #
########################

OD tpp-ui develop:
  stage: "OpenShift Deployment"
  only:
    - develop
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: develop # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEV} # Openshift target namespace
  extends: .deploy_openshift

OD tpp-ui nightly:
  stage: "OpenShift Deployment"
  only:
    - schedules
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: nightly # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_INTEG} # Openshift target namespace
  extends: .deploy_openshift

OD tpp-ui demo:
  stage: "OpenShift Deployment"
  only:
    - master
  variables:
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
    DOCKER_TAG: latest # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEMO} # Openshift target namespace
  extends: .deploy_openshift