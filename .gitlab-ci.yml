# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

image: "adorsys/ci-build"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Code Analysis"         # static code analysis
  - "Code Testing"          # evaluate code and analysis results
  - "Code Compilation"      # build jar and provide as artifact
  - "Unit Testing"          # run tests and code quality checks
  - "Docker Testing"        # test building docker images, on success pass docker image
  - "Docker Tagging"        # re-tag docker images from "test" to actual tag
  - "Docker Publishing"     # push to DockerHub
  - "OpenShift Deployment"  # deploy to OpenShift
  - "Maven Release"         # release to Maven Central

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables:

  DOCKER_DIR_ONLINE_BANKING: "online-banking/online-banking-app"
  DOCKER_DIR_CERTIFICATE_GENERATOR: "certificate-generator"
  DOCKER_DIR_POSTMAN_TESTS: "postman-scripts"
  DOCKER_DIR_ONLINE_BANKING_UI: "oba-ui"
  DOCKER_DIR_TPP_UI: "tpp-ui"
  DOCKER_DIR_DEVPORTAL_UI: "developer-portal-ui"

  DOCKER_IMAGE_ONLINE_BANKING: "xs2a-online-banking"
  DOCKER_IMAGE_CERTIFICATE_GENERATOR: "xs2a-certificate-generator"
  DOCKER_IMAGE_POSTMAN_TESTS: "xs2a-postman-tests"
  DOCKER_IMAGE_ONLINE_BANKING_UI: "xs2a-online-banking-ui"
  DOCKER_IMAGE_TPP_UI: "xs2a-bank-tpp-ui"
  DOCKER_IMAGE_DEVPORTAL_UI: "xs2a-bank-devportal"

  ###########################
  # Public Dockerhub Images #
  ###########################

  DOCKERHUB_REGISTRY: "docker.io"

  DOCKERHUB_NAMESPACE: "adorsys"

  ############################
  # Private Openshift Images #
  ############################

  OPENSHIFT_NAMESPACE_DEV: "adorsys-dynamic-sandbox-dev"
  OPENSHIFT_NAMESPACE_INTEG: "adorsys-dynamic-sandbox-integ"
  OPENSHIFT_NAMESPACE_DEMO: "adorsys-dynamic-sandbox-demo"

  ###########################
  # Build variables         #
  ###########################

  # Defaults for Java 8
  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  script:
    - jabba use $BUILD_JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipTests clean install
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
    - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository

# args:
#   ${DOCKER_DIR}
#   ${DOCKER_IMAGE}
.build_docker_image: &build_docker_image
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE}:test" ${DOCKER_DIR}

# args:
#   ${DOCKER_IMAGE}
#   ${DOCKER_TAG}
.dockerhub_deployment: &dockerhub_deployment
  script:
    - docker tag "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE}:test" "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE}:${DOCKER_TAG}"

    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE}:${DOCKER_TAG}"
    - docker logout

# args:
#   ${DOCKER_IMAGE}
#   ${DOCKER_TAG}
.deploy_openshift: &deploy_openshift
  script:
    - >-
      skopeo copy
      --dest-creds=openshift:${OPENSHIFT_TOKEN}
      "docker://${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE}:${DOCKER_TAG}"
      "docker://${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/${DOCKER_IMAGE}:latest"

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

#################
# Code Analysis #
#################

PMD report:
  stage: "Code Analysis"
  script:
    - mvn -Dmaven.test.skip=true package pmd:pmd
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

Javadoc check:
  stage: "Code Analysis"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
      - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

################
# Code Testing #
################

PMD check:
  stage: "Code Testing"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - mvn -Dmaven.test.skip=true package pmd:check

####################
# Code Compilation #
####################

# Backends #

Backend (java8):
  stage: "Code Compilation"
  <<: *build_java
  variables:
    BUILD_JAVA_VERSION: system@1.8
  artifacts:
    paths:
      - "online-banking/online-banking-app/target/online-banking-app.jar"
      - "certificate-generator/target/certificate-generator.jar"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Backend (java11):
  stage: "Code Compilation"
  <<: *build_java
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

# Frontends #

Frontend developer-portal-ui:
  stage: "Code Compilation"
  script:
    - cd developer-portal-ui
    - npm install
    - npm run build --prod
  cache:
    key: "DEVPORTAL_${CI_COMMIT_REF_SLUG}"
    paths:
      - developer-portal-ui/node_modules
  artifacts:
    paths:
      - "developer-portal-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Frontend oba-ui:
 stage: "Code Compilation"
 script:
    - cd oba-ui
    - npm install
    - npm run build --prod
 cache:
    key: "OBA_UI_${CI_COMMIT_REF_SLUG}"
    paths:
     - oba-ui/node_modules
 artifacts:
    paths:
     - "oba-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Frontend tpp-ui:
  stage: "Code Compilation"
  script:
    - cd tpp-ui
    - npm install
    - npm run build --prod
  cache:
    key: "TPP_UI_${CI_COMMIT_REF_SLUG}"
    paths:
      - tpp-ui/node_modules
  artifacts:
    paths:
      - "tpp-ui/dist"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

################
# Unit Testing #
################

# Backends #

backend_unit_tests:
  stage: "Unit Testing"
  except:
    - develop
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  script:
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install
  artifacts:
    paths:
      - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

# Frontends #

ttp_frontend_unit_tests:
  stage: "Unit Testing"
  script:
  - cd tpp-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

oba_frontend_unit_tests:
  stage: "Unit Testing"
  script:
  - cd oba-ui
  - nvm use 10
  - npm ci
  - npm run test-ci

##################
# Docker Testing #
##################

# Backends #

test dockerbuild oba:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_ONLINE_BANKING}
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING}
  <<: *build_docker_image

test dockerbuild cert gen:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_CERTIFICATE_GENERATOR}
    DOCKER_IMAGE: ${DOCKER_IMAGE_CERTIFICATE_GENERATOR}
  <<: *build_docker_image

test dockerbuild postman:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_POSTMAN_TESTS}
    DOCKER_IMAGE: ${DOCKER_IMAGE_POSTMAN_TESTS}
  <<: *build_docker_images

# Frontends #

test dockerbuild devportal ui:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_DEVPORTAL_UI}
    DOCKER_IMAGE: ${DOCKER_IMAGE_DEVPORTAL_UI}
  <<: *build_docker_image

test dockerbuild oba ui:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_ONLINE_BANKING_UI}
    DOCKER_IMAGE: ${DOCKER_IMAGE_ONLINE_BANKING_UI}
  <<: *build_docker_image

test dockerbuild tpp ui:
  stage: "Docker Testing"
  variables:
    DOCKER_DIR: ${DOCKER_DIR_TPP_UI}
    DOCKER_IMAGE: ${DOCKER_IMAGE_TPP_UI}
  <<: *build_docker_image

# TODO: ADD postman Docker Testing

#postman_tests:
#  stage: "Test"
#  image:
#    name: postman/newman_alpine33
#    entrypoint: [""]
#  only:
#    - schedules
#  script:
#    - npm config set unsafe-perm true
#    - npm install -g newman-reporter-html
#    - cd postman-scripts
#    - newman run postman_collection.json -e postman_environment_dev.json -g postman_global_variable.json --reporters cli,html --reporter-html-template html_report_template.hbs --reporter-html-export postman-tests-report.html --suppress-exit-code
#  artifacts:
#    when: always
#    paths:
#      - "postman-scripts/postman-tests-report.html"
#    expire_in: "10 day"

# TODO: go on here:

########################
# DockerHub Deployment #
########################

# develop #

build_dockerhub_image_develop:
  stage: "Package"
  only:
    - develop
  variables:
    DOCKER_TAG: develop
  <<: *push_dockerhub_images

deploy_openshift_develop:
  stage: "Deploy"
  only:
    - develop
  variables:
    DOCKER_TAG: develop # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEV} # Openshift target namespace
  <<: *deploy_openshift

# nightly

build_dockerhub_image_nightly:
  stage: "Package"
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *push_dockerhub_images

deploy_openshift_nightly:
  stage: "Deploy"
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_INTEG} # Openshift target namespace
  <<: *deploy_openshift

# master

build_dockerhub_image_master:
  stage: "Package"
  only:
    - master
  variables:
    DOCKER_TAG: latest
  <<: *push_dockerhub_images

deploy_openshift_demo:
  stage: "Deploy"
  only:
    - master
  variables:
    DOCKER_TAG: latest # Dockerhub source tag
    OPENSHIFT_NAMESPACE: ${OPENSHIFT_NAMESPACE_DEMO} # Openshift target namespace
  <<: *deploy_openshift

# tags

release_maven_central:
  stage: "release"
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository
  only:
    - tags
  script:
    - echo $SONATYPE_GPG_SECRET_KEY | base64 --decode | $SONATYPE_GPG_EXECUTABLE --import
    - echo $SONATYPE_GPG_OWNERTRUST | base64 --decode | $SONATYPE_GPG_EXECUTABLE --import-ownertrust
    - mvn --settings scripts/mvn-release-settings.xml -Prelease -DskipTests -B -U deploy
